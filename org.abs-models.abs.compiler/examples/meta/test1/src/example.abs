module M;
import * from ABS.Meta;

interface I { Int getF(); Int getP(); }

class C(Int p) implements I { 
    Int f = p - 1;
    Int getF() { return f; }
    Int getP() {return p; }
    Unit m() {}
}


{
    I o = new local C(100);

    Int f = o.getF();
    Int p = o.getP();

    assert f == 99;
    assert p == 100;

    
        
//    ObjectMirror mirror = reflect(o);
//    String name = mirror.getClassName();

    // apply delta
    
    // now NewClass is part of module M
    // so we can use it to instantiate objects

    //I o2 = new local NewClass();

}

delta D;
uses M;

//adds class NewClass implements I {
//    Int f = 103;
//    Unit m() {}
//}

modifies class C {
    adds Int x() {return 1;}
    adds Int y() {return 2;}
    
    modifies Unit m() { skip; }
    removes Unit m();

    removes Int f;
    adds Int a = 17;
    adds Int b;

    // fixme
    adds Int c = p;

}

