module Hello;

interface Greeting {
    String sayHello();
}
class Greeter implements Greeting {
    String sayHello() {
        return "Hello world";
    }
}

class Application {
    String s = "";
    // active class
    Unit run() {
        Greeting bob;
        bob = new local Greeter();
        s = bob.sayHello();
    }
}

{
    // main block
    new local Application(); // this runs the application
}

delta De;

modifies class Hello.Greeter {
    modifies String sayHello() {
        return "Hallo Welt";
    }
}

delta Nl;

    modifies class Greeter {
        modifies String sayHello() {
            return "Hallo wereld";
        }
    }

delta Fr;
    modifies class Greeter {
        modifies String sayHello() {
            return "Bonjour tout le monde";
        }
    }

delta Rpt (Int times);
    modifies class Greeter {
        modifies String sayHello() {
            String result = "";
            Int i = 0;
            while (i < times) {
                String orig = original();
                result = result + " " + orig;
                i = i + 1;
            }
            return result;
        }
    }


productline MultiLingualHelloWorld;
features English, German, French, Dutch, Repeat;
delta Rpt(Repeat.times) after De, Fr, Nl when Repeat;
delta De when German;
delta Fr when French;
delta Nl when Dutch;


// basic product with no deltas
product P1 (English);

// apply delta Fr
product P2 (French);

// apply deltas Fr and Repeat
product P3 (French, Repeat{times=10});

// apply deltas En and Repeat, but it should be refused because "times > 5"
product P4 (English, Repeat{times=6});

