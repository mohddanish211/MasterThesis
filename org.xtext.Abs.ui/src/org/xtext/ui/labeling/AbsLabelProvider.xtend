/*
 * generated by Xtext 2.13.0
 */
package org.xtext.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import org.xtext.abs.Delta_decl
import org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.IStyledLabelProvider
import org.xtext.abs.Interface_decl
import org.eclipse.jface.resource.ImageDescriptor
import org.xtext.abs.Module_decl
import org.xtext.abs.Module_export
import org.xtext.abs.Module_import
import org.xtext.abs.Decl
import org.xtext.abs.DataType_decl
import org.xtext.abs.Data_constructor
import org.xtext.abs.Function_decl
import org.xtext.abs.Class_decl
import org.xtext.abs.Field_decl
import org.xtext.abs.Method
import org.xtext.abs.Productline_decl
import org.xtext.abs.Product_decl
import org.xtext.abs.Feature_decl
import org.xtext.abs.impl.Delta_clauseImpl
import org.xtext.abs.impl.Application_conditionImpl
import org.xtext.abs.Feature

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class AbsLabelProvider extends DefaultEObjectLabelProvider implements IStyledLabelProvider{
	
	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	

	def text(Delta_decl ele) {
		return ele.name;
	}
	
	def text(Feature_decl ele) {
		return ele.name
	}		
	
	//
	def image(Interface_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_interface.gif")).createImage();
	}
	
	def image(Delta_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_delta.gif")).createImage();
	}
	
	def image(Module_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_module.gif")).createImage();
	}
	
	def image(Module_export ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_export.gif")).createImage();
	}
	
	def image(Module_import ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_import.gif")).createImage();
	}
	
	def image(Decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_module.gif")).createImage();
	}
	
	def image(Function_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_function.gif")).createImage();
	}
	
	def image(DataType_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_datatype.gif")).createImage();
	}
	
	def image(Data_constructor ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_constructor.gif")).createImage();
	}
	
	def image(Method ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_method.gif")).createImage();
	}
	
	def image(Class_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_class.gif")).createImage();
	}
	
	def image(Field_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_field.gif")).createImage();
	}
	
	def image(Productline_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_productline.gif")).createImage();
	}
	
	def image(Product_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_product.gif")).createImage();
	}
	
	/*def image(Feature_decl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/maude_hats.gif")).createImage();
	}*/
	
	def text(Delta_clauseImpl ele) {
		ele.deltaspec.name;
	}

	def image(Delta_clauseImpl ele) {
		
	ImageDescriptor.createFromURL( 
		getClass().getResource("/resources/icons/abs_delta.gif")).createImage();
	}
	
   def text(Application_conditionImpl ele) {
		
			return ele.feature.feature_decl.name
		
	}
	
	

}


