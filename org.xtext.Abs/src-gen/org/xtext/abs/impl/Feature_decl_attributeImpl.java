/**
 * generated by Xtext 2.13.0
 */
package org.xtext.abs.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.abs.AbsPackage;
import org.xtext.abs.Boundary_int;
import org.xtext.abs.Boundary_val;
import org.xtext.abs.Feature_decl_attribute;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Feature decl attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.abs.impl.Feature_decl_attributeImpl#getBoundary_val <em>Boundary val</em>}</li>
 *   <li>{@link org.xtext.abs.impl.Feature_decl_attributeImpl#getLBoundary_int <em>LBoundary int</em>}</li>
 *   <li>{@link org.xtext.abs.impl.Feature_decl_attributeImpl#getUBoundary_int <em>UBoundary int</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class Feature_decl_attributeImpl extends MinimalEObjectImpl.Container implements Feature_decl_attribute
{
  /**
   * The cached value of the '{@link #getBoundary_val() <em>Boundary val</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoundary_val()
   * @generated
   * @ordered
   */
  protected EList<Boundary_val> boundary_val;

  /**
   * The cached value of the '{@link #getLBoundary_int() <em>LBoundary int</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLBoundary_int()
   * @generated
   * @ordered
   */
  protected Boundary_int lBoundary_int;

  /**
   * The cached value of the '{@link #getUBoundary_int() <em>UBoundary int</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUBoundary_int()
   * @generated
   * @ordered
   */
  protected Boundary_int uBoundary_int;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Feature_decl_attributeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AbsPackage.Literals.FEATURE_DECL_ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Boundary_val> getBoundary_val()
  {
    if (boundary_val == null)
    {
      boundary_val = new EObjectContainmentEList<Boundary_val>(Boundary_val.class, this, AbsPackage.FEATURE_DECL_ATTRIBUTE__BOUNDARY_VAL);
    }
    return boundary_val;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Boundary_int getLBoundary_int()
  {
    return lBoundary_int;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLBoundary_int(Boundary_int newLBoundary_int, NotificationChain msgs)
  {
    Boundary_int oldLBoundary_int = lBoundary_int;
    lBoundary_int = newLBoundary_int;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AbsPackage.FEATURE_DECL_ATTRIBUTE__LBOUNDARY_INT, oldLBoundary_int, newLBoundary_int);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLBoundary_int(Boundary_int newLBoundary_int)
  {
    if (newLBoundary_int != lBoundary_int)
    {
      NotificationChain msgs = null;
      if (lBoundary_int != null)
        msgs = ((InternalEObject)lBoundary_int).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AbsPackage.FEATURE_DECL_ATTRIBUTE__LBOUNDARY_INT, null, msgs);
      if (newLBoundary_int != null)
        msgs = ((InternalEObject)newLBoundary_int).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AbsPackage.FEATURE_DECL_ATTRIBUTE__LBOUNDARY_INT, null, msgs);
      msgs = basicSetLBoundary_int(newLBoundary_int, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AbsPackage.FEATURE_DECL_ATTRIBUTE__LBOUNDARY_INT, newLBoundary_int, newLBoundary_int));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Boundary_int getUBoundary_int()
  {
    return uBoundary_int;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUBoundary_int(Boundary_int newUBoundary_int, NotificationChain msgs)
  {
    Boundary_int oldUBoundary_int = uBoundary_int;
    uBoundary_int = newUBoundary_int;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AbsPackage.FEATURE_DECL_ATTRIBUTE__UBOUNDARY_INT, oldUBoundary_int, newUBoundary_int);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUBoundary_int(Boundary_int newUBoundary_int)
  {
    if (newUBoundary_int != uBoundary_int)
    {
      NotificationChain msgs = null;
      if (uBoundary_int != null)
        msgs = ((InternalEObject)uBoundary_int).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AbsPackage.FEATURE_DECL_ATTRIBUTE__UBOUNDARY_INT, null, msgs);
      if (newUBoundary_int != null)
        msgs = ((InternalEObject)newUBoundary_int).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AbsPackage.FEATURE_DECL_ATTRIBUTE__UBOUNDARY_INT, null, msgs);
      msgs = basicSetUBoundary_int(newUBoundary_int, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AbsPackage.FEATURE_DECL_ATTRIBUTE__UBOUNDARY_INT, newUBoundary_int, newUBoundary_int));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__BOUNDARY_VAL:
        return ((InternalEList<?>)getBoundary_val()).basicRemove(otherEnd, msgs);
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__LBOUNDARY_INT:
        return basicSetLBoundary_int(null, msgs);
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__UBOUNDARY_INT:
        return basicSetUBoundary_int(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__BOUNDARY_VAL:
        return getBoundary_val();
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__LBOUNDARY_INT:
        return getLBoundary_int();
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__UBOUNDARY_INT:
        return getUBoundary_int();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__BOUNDARY_VAL:
        getBoundary_val().clear();
        getBoundary_val().addAll((Collection<? extends Boundary_val>)newValue);
        return;
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__LBOUNDARY_INT:
        setLBoundary_int((Boundary_int)newValue);
        return;
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__UBOUNDARY_INT:
        setUBoundary_int((Boundary_int)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__BOUNDARY_VAL:
        getBoundary_val().clear();
        return;
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__LBOUNDARY_INT:
        setLBoundary_int((Boundary_int)null);
        return;
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__UBOUNDARY_INT:
        setUBoundary_int((Boundary_int)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__BOUNDARY_VAL:
        return boundary_val != null && !boundary_val.isEmpty();
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__LBOUNDARY_INT:
        return lBoundary_int != null;
      case AbsPackage.FEATURE_DECL_ATTRIBUTE__UBOUNDARY_INT:
        return uBoundary_int != null;
    }
    return super.eIsSet(featureID);
  }

} //Feature_decl_attributeImpl
