/*
 * generated by Xtext 2.13.0
 */
package org.xtext.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.abs.Productline_decl
import org.xtext.abs.Delta_clause
import org.xtext.abs.Application_condition
import org.xtext.abs.AppOr_exp
import org.xtext.abs.AppAnd_exp
//import com.google.inject.Inject;
import org.xtext.abs.Delta_decl
import org.eclipse.emf.ecore.EObject
//import org.xtext.abs.Product_decl
import org.xtext.abs.Feature_decl
import org.xtext.abs.Feature

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class AbsGenerator extends AbstractGenerator {
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))

	for (EObject content : resource.getContents()) {
			println("content.eCrossReferences");
			
			for(EObject e1 : content.eContents){
				println("content eCrossReferences");
				println(e1);	
			}
		}
	for (e : resource.allContents.toIterable.filter(Productline_decl)) {
                
			e.compile();
		}
	


	}
	
 	def compile(Productline_decl e) {
		println(e.name);
		var StringBuffer featureNames = new StringBuffer;
		for(Delta_clause f: e.delta_clause){
			featureNames.setLength(0);
			try{
				if((f.when_condition.application_condition)!==null){
				resolveApplicationCondition(f.when_condition.application_condition,featureNames);
				}
				//f.deltaspec.name = featureNames.toString
				//print(f.deltaspec.name+"----->"+featureNames);
//				testGeneartorObj.label = featureNames.toString;
				
			}catch(Exception err){
				println(err.toString);
			}
			println();
		}
		return featureNames;
	}

//Delta to Feature Visualization.

	def compile(Delta_decl e) {
		var StringBuffer featureNames = new StringBuffer;
		for(EObject o: e.eContainer.eAllContents.toIterable.filter(Productline_decl)){
			println("------xx Delta TO Feature xx-----");
			for(Delta_clause delta_clause: o.eAllContents.toIterable.filter(Delta_clause)){
			featureNames.setLength(0);
			try{
				if((delta_clause.deltaspec.name).equals(e.name)){
					if((delta_clause.when_condition.application_condition)!==null){
					resolveApplicationCondition(delta_clause.when_condition.application_condition,featureNames);
						}
					print(delta_clause.deltaspec.name+"----->"+featureNames);
					return featureNames.toString
					}
				}catch(Exception err){
				println(err.toString);
				}
			}
		}
		return "error"
	}
	
//Feature to Delta Visualization

	def compile(Feature_decl e) {
		var StringBuffer deltaNames = new StringBuffer;
		for(EObject o: e.eContainer.eAllContents.toIterable.filter(Productline_decl)){
			println("------xx Feature TO Delta xx-----");
			for(Delta_clause delta_clause: o.eAllContents.toIterable.filter(Delta_clause)){
			deltaNames.setLength(0);
			try{
				if((delta_clause.from_condition.application_condition.feature.name).equals(e.name)){
					if((delta_clause.when_condition.application_condition)!==null){
					resolveApplicationCondition(delta_clause.when_condition.application_condition,deltaNames);
						}
			print(delta_clause.from_condition.application_condition.feature+"--xxxx---"+deltaNames);
					return deltaNames.toString
					}
				}catch(Exception err){
				println(err.toString);
				}
			}
		}
		return "error"
	}
	
	
	
	def resolveApplicationCondition(Application_condition app_cond,StringBuffer featureName){
	try{
			
		
			if(app_cond instanceof AppOr_exp){
				resolveApplicationCondition(app_cond.left,featureName);
				resolveApplicationCondition(app_cond.right,featureName);
			}else if(app_cond instanceof AppAnd_exp){
				resolveApplicationCondition(app_cond.left,featureName);
				resolveApplicationCondition(app_cond.right,featureName);
			}else{
				if(app_cond.feature!== null){
					if(featureName.length==0){
						featureName.append(app_cond.feature.name);
						}else{
						featureName.append(","+app_cond.feature.name);
						}
					
				}else{
					resolveApplicationCondition(app_cond.app_cond,featureName);
				}
				
			}
		}catch(Exception e){
			println(e.toString());
		}
	}

	
}